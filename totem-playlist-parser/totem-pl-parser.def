;; -*- scheme -*-
; object definitions ...
;; Enumerations and flags ...

(define-enum PlParserResult
  (in-module "Totem")
  (c-name "TotemPlParserResult")
  (gtype-id "TOTEM_TYPE_PL_PARSER_RESULT")
  (values
    '("unhandled" "TOTEM_PL_PARSER_RESULT_UNHANDLED")
    '("error" "TOTEM_PL_PARSER_RESULT_ERROR")
    '("success" "TOTEM_PL_PARSER_RESULT_SUCCESS")
    '("ignored" "TOTEM_PL_PARSER_RESULT_IGNORED")
  )
)

(define-enum PlParserType
  (in-module "Totem")
  (c-name "TotemPlParserType")
  (gtype-id "TOTEM_TYPE_PL_PARSER_TYPE")
  (values
    '("pls" "TOTEM_PL_PARSER_PLS")
    '("m3u" "TOTEM_PL_PARSER_M3U")
    '("m3u-dos" "TOTEM_PL_PARSER_M3U_DOS")
    '("xspf" "TOTEM_PL_PARSER_XSPF")
    '("iriver-pla" "TOTEM_PL_PARSER_IRIVER_PLA")
  )
)

(define-enum PlParserError
  (in-module "Totem")
  (c-name "TotemPlParserError")
  (gtype-id "TOTEM_TYPE_PL_PARSER_ERROR")
  (values
    '("no-disc" "TOTEM_PL_PARSER_ERROR_NO_DISC")
    '("mount-failed" "TOTEM_PL_PARSER_ERROR_MOUNT_FAILED")
  )
)


;; From totem-pl-parser.h

(define-function totem_pl_parser_error_quark
  (c-name "totem_pl_parser_error_quark")
  (return-type "GQuark")
)

(define-function totem_pl_parser_get_type
  (c-name "totem_pl_parser_get_type")
  (return-type "GType")
)

(define-function totem_pl_parser_parse_duration
  (c-name "totem_pl_parser_parse_duration")
  (return-type "gint64")
  (parameters
    '("const-char*" "duration")
    '("gboolean" "debug")
  )
)

(define-function totem_pl_parser_parse_date
  (c-name "totem_pl_parser_parse_date")
  (return-type "guint64")
  (parameters
    '("const-char*" "date_str")
    '("gboolean" "debug")
  )
)

; added manualy

(define-object TotemPlParser
  (in-module "Totem")
  (parent "GObject")
  (c-name "TotemPlParser")
  (gtype-id "TOTEM_TYPE_PL_PARSER")
)

(define-method write
  (of-object "TotemPlParser")
  (c-name "totem_pl_parser_write")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel*" "model")
    '("TotemPlParserIterFunc" "func")
    '("const-char*" "output")
    '("TotemPlParserType" "type")
    '("gpointer" "user_data")
    '("GError**" "error")
  )
)

(define-method write_with_title
  (of-object "TotemPlParser")
  (c-name "totem_pl_parser_write_with_title")
  (return-type "gboolean")
  (parameters
    '("GtkTreeModel*" "model")
    '("TotemPlParserIterFunc" "func")
    '("const-char*" "output")
    '("const-char*" "title")
    '("TotemPlParserType" "type")
    '("gpointer" "user_data")
    '("GError**" "error")
  )
)

(define-method add_ignored_scheme
  (of-object "TotemPlParser")
  (c-name "totem_pl_parser_add_ignored_scheme")
  (return-type "none")
  (parameters
    '("const-char*" "scheme")
  )
)

(define-method add_ignored_mimetype
  (of-object "TotemPlParser")
  (c-name "totem_pl_parser_add_ignored_mimetype")
  (return-type "none")
  (parameters
    '("const-char*" "mimetype")
  )
)

(define-method parse
  (of-object "TotemPlParser")
  (c-name "totem_pl_parser_parse")
  (return-type "TotemPlParserResult")
  (parameters
    '("const-char*" "uri")
    '("gboolean" "fallback")
  )
)

(define-method parse_with_base
  (of-object "TotemPlParser")
  (c-name "totem_pl_parser_parse_with_base")
  (return-type "TotemPlParserResult")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "base")
    '("gboolean" "fallback")
  )
)

(define-function totem_pl_parser_new
  (c-name "totem_pl_parser_new")
  (is-constructor-of "TotemPlParser")
  (return-type "TotemPlParser*")
)

(define-function totem_pl_parser_metadata_get_type
  (c-name "totem_pl_parser_metadata_get_type")
  (return-type "GType")
)


